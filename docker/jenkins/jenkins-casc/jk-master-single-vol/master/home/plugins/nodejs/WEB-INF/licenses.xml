<?xml version='1.0' encoding='UTF-8'?>
<l:dependencies xmlns:l='licenses' groupId='org.jenkins-ci.plugins' artifactId='nodejs' version='1.4.0'><l:dependency name='NodeJS Plugin' groupId='org.jenkins-ci.plugins' artifactId='nodejs' version='1.4.0' url='https://github.com/jenkinsci/nodejs-plugin'><l:description>Executes NodeJS script as a build step.</l:description><l:license name='MIT License' url='LICENSE.txt'/></l:dependency><l:dependency name='JSON in Java' groupId='org.json' artifactId='json' version='20201115' url='https://github.com/douglascrockford/JSON-java'><l:description>JSON is a light-weight, language independent, data interchange format.
        See http://www.JSON.org/

        The files in this package implement JSON encoders/decoders in Java.
        It also includes the capability to convert between JSON and XML, HTTP
        headers, Cookies, and CDL.

        This is a reference implementation. There is a large number of JSON packages
        in Java. Perhaps someday the Java community will standardize on one. Until
        then, choose carefully.

        The license includes this restriction: "The software shall be used for good,
        not evil." If your conscience cannot live with that, then choose a different
        package.</l:description><l:license name='The JSON License' url='http://json.org/license.html'/></l:dependency><l:dependency name='EdDSA-Java' groupId='net.i2p.crypto' artifactId='eddsa' version='0.3.0' url='https://github.com/str4d/ed25519-java'><l:description>Implementation of EdDSA in Java</l:description><l:license name='CC0 1.0 Universal' url='https://creativecommons.org/publicdomain/zero/1.0/'/></l:dependency><l:dependency name='Pipeline: Step API' groupId='org.jenkins-ci.plugins.workflow' artifactId='workflow-step-api' version='2.23' url='https://github.com/jenkinsci/workflow-step-api-plugin'><l:description>The Jenkins Plugins Parent POM Project</l:description><l:license name='MIT License' url='https://opensource.org/licenses/MIT'/></l:dependency></l:dependencies>